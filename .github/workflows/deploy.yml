name: Build and Deploy to Tencent Cloud CVM

on:
  push:
    branches:
      - main

# Define environment variables used across jobs
env:
  TCR_REGISTRY: ${{ secrets.TCR_REGISTRY }}
  IMAGE_NAME: evolve-common-api

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Tencent Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.TCR_REGISTRY }}
          username: ${{ secrets.TCR_USERNAME }}
          password: ${{ secrets.TCR_PASSWORD }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.TCR_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: Deploy to CVM
    needs: build-and-push # This job runs only after the build is successful
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to CVM
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.CVM_HOST }}
          username: ${{ secrets.CVM_USERNAME }}
          key: ${{ secrets.CVM_SSH_PRIVATE_KEY }}
          script: |
            set -e
            cd /${{ secrets.CVM_USERNAME }}/evolve-common

            # Configure Git to use HTTP/1.1 for stability
            git config --global http.version HTTP/1.1
            
            # Pull the latest docker-compose.yml if it has changed
            git pull origin main

            # Verify that the required secrets are set
            if [ -z "${{ secrets.TCR_REGISTRY }}" ] || [ -z "${{ secrets.TCR_USERNAME }}" ] || [ -z "${{ secrets.TCR_PASSWORD }}" ]; then
              echo "Error: One or more TCR secrets (TCR_REGISTRY, TCR_USERNAME, TCR_PASSWORD) are not set."
              echo "Please add them to your GitHub repository secrets before proceeding."
              exit 1
            fi

            # Log in to Tencent Container Registry on the CVM
            echo "${{ secrets.TCR_PASSWORD }}" | docker login ${{ secrets.TCR_REGISTRY }} -u ${{ secrets.TCR_USERNAME }} --password-stdin
            
            # Export environment variables for docker-compose to use
            export TCR_REGISTRY=${{ secrets.TCR_REGISTRY }}
            export IMAGE_NAME=${{ env.IMAGE_NAME }}
            export IMAGE_TAG=${{ github.sha }}

            # Pull the new image and restart services using docker-compose
            docker-compose pull api
            docker-compose up -d --remove-orphans

            # Wait for the service to be healthy
            sleep 20
            
            # Run database migrations
            docker-compose exec api alembic upgrade head 